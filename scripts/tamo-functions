#!/bin/bash
# TAMO+ Functions
currentuser=$(whoami) # Check user
. /home/$currentuser/tamoplus/scripts/tamo-vars

auto_update() {
#Double Check if User Settings found.
if [ ! -f "$USER_SETTINGS" ]; then 
cat <<\EOF_user_settings.ini > "$USER_SETTINGS"
#USER SETTINGS
auto_update_flag=0
user_menu_flag=0
EOF_user_settings.ini
sudo chmod +x $USER_SETTINGS
fi

    if grep 'auto_update_flag=0' "$USER_SETTINGS"; then
      echo "Auto update now On"
      sed -i "s|auto_update_flag=0|auto_update_flag=1|" "$USER_SETTINGS"
    else
      echo "Auto update now Off"
      sed -i "s|auto_update_flag=1|auto_update_flag=0|" "$USER_SETTINGS"
    fi
}

retropie_menu() {
#Double Check if User Settings found.
if [ ! -f "$USER_SETTINGS" ]; then 
cat <<\EOF_user_settings.ini > "$USER_SETTINGS"
#USER SETTINGS
auto_update_flag=0
user_menu_flag=0
EOF_user_settings.ini
sudo chmod +x $USER_SETTINGS
fi

if grep 'user_menu_flag=0' "$USER_SETTINGS"; then
	echo "Keep Menus Now Set To Off. Now Removing RetroPie Menus."
	sed -i "s|user_menu_flag=0|user_menu_flag=1|" "$USER_SETTINGS"
	#---------------------------------------------------------------------
	#ADD ALL ICONS AND THE FULL GAMELIST FOR EASY RSYNC EVEN WHEN REMOVING
	#---------------------------------------------------------------------
	#rsync -av $INSTALL_DIR/scripts/icons/ $MENU_DIR/icons/
	#game_list_full
	rm_menus
else
	echo "Keep Menus Now Set To ON. Now Bring RetroPie Menus Back"
	sed -i "s|user_menu_flag=1|user_menu_flag=0|" "$USER_SETTINGS"
	#---------------------------------------------------------------------
	#ADD ALL ICONS AND THE FULL GAMELIST FOR EASY RSYNC EVEN WHEN REMOVING
	#---------------------------------------------------------------------
	#rsync -av $INSTALL_DIR/scripts/icons/ $MENU_DIR/icons/
	#game_list_full
	keep_menus
fi
stats_check
}

bezel_project() {
#Adds Updated Version to tamoplus Folder

#One removes menu
if grep 'user_menu_flag=1' "$USER_SETTINGS"; then
	
if [ ! -d "$INSTALL_DIR/scripts" ]; then mkdir $INSTALL_DIR/scripts; fi

if [ -f "$INSTALL_DIR/scripts/bezelproject.sh" ]; then 
	
if [ -f "$MENU_DIR/bezelproject" ]; then sudo mv -f $MENU_DIR/bezelproject $INSTALL_DIR/scripts/; fi
if [ -f "$STMENU_VIS_DIR/bezelproject" ]; then sudo mv -f $STMENU_VIS_DIR/bezelproject $INSTALL_DIR/scripts/; fi

chmod +x $INSTALL_DIR/scripts/bezelproject.sh
$INSTALL_DIR/scripts/bezelproject.sh

else

if [ -f "$MENU_DIR/bezelproject.sh" ]; then sudo rm -f -r $MENU_DIR/bezelproject.sh; fi
if [ -f "$STMENU_VIS_DIR/bezelproject.sh" ]; then sudo rm -f -r $STMENU_VIS_DIR/bezelproject.sh; fi

cd "$INSTALL_DIR/scripts/"
wget "https://raw.githubusercontent.com/thebezelproject/BezelProject/master/bezelproject.sh"
chmod +x "bezelproject.sh"

mv -f $MENU_DIR/bezelproject.sh $INSTALL_DIR/scripts/bezelproject.sh
$INSTALL_DIR/scripts/bezelproject.sh

fi

else

if [ ! -d "$INSTALL_DIR/scripts" ]; then mkdir $INSTALL_DIR/scripts; fi

if [ -f "$INSTALL_DIR/scripts/bezelproject.sh" ]; then 

if [ -f "$MENU_DIR/bezelproject.sh" ]; then sudo cp $MENU_DIR/bezelproject.sh $INSTALL_DIR/scripts/; fi
if [ -f "$STMENU_VIS_DIR/bezelproject" ]; then sudo cp $STMENU_VIS_DIR/bezelproject.sh $INSTALL_DIR/scripts/; fi

chmod +x $INSTALL_DIR/scripts/bezelproject.sh
$INSTALL_DIR/scripts/bezelproject.sh

else

if [ -f "$MENU_DIR/bezelproject,sh" ]; then sudo cp $MENU_DIR/bezelproject.sh $INSTALL_DIR/scripts/; fi
if [ -f "$STMENU_VIS_DIR/bezelproject.sh" ]; then sudo cp $STMENU_VIS_DIR/bezelproject.sh $INSTALL_DIR/scripts/; fi

cd "$INSTALL_DIR/scripts/"
wget "https://raw.githubusercontent.com/thebezelproject/BezelProject/master/bezelproject.sh"
chmod +x "bezelproject.sh"

if [ -f "$MENU_DIR/bezelproject" ]; then sudo cp  $INSTALL_DIR/scripts/ $MENU_DIR/bezelproject; fi
if [ -f "$STMENU_VIS_DIR/bezelproject" ]; then sudo cp  $INSTALL_DIR/scripts/ $STMENU_VIS_DIR/bezelproject; fi

cp $MENU_DIR/bezelproject.sh $INSTALL_DIR/scripts/bezelproject.sh
$INSTALL_DIR/scripts/bezelproject.sh

rm -fr "$INSTALL_DIR/tmp"
fi

fi
}

supreme_marquee_tool() {

if grep 'user_menu_flag=1' "$USER_SETTINGS"; then

	#Added step because marquee script reboots on clean install - Checks if the marquee script has been installed.
	if [ -f "/home/pi/PieMarquee2/scripts/supreme-marquee-tool.sh" ]; then sudo mv -f /home/pi/PieMarquee2/scripts/supreme-marquee-tool.sh $INSTALL_DIR/scripts/; fi
	if [ -f "/home/pi/PieMarquee3/scripts/supreme-marquee-tool.sh" ]; then sudo mv -f /home/pi/PieMarquee2/scripts/supreme-marquee-tool.sh $INSTALL_DIR/scripts/; fi

	if [ -f "$INSTALL_DIR/scripts/supreme-marquee-tool.sh" ]; then 

		#Adds Updated Version to tamoplus Folder
		if [ -f "$MENU_DIR/supreme-marquee-tool.sh" ]; then sudo mv -f $MENU_DIR/supreme-marquee-tool.sh $INSTALL_DIR/scripts/; fi
		if [ -f "$STMENU_VIS_DIR/supreme-marquee-tool.sh" ]; then sudo mv -f $STMENU_VIS_DIR/supreme-marquee-tool.sh $INSTALL_DIR/scripts/; fi

		chmod +x $INSTALL_DIR/scripts/supreme-marquee-tool.sh
		$INSTALL_DIR/scripts/supreme-marquee-tool.sh

	else

		if [ -f "$MENU_DIR/supreme-marquee-tool.sh" ]; then sudo rm -f -r $MENU_DIR/supreme-marquee-tool.sh; fi
		if [ -f "$STMENU_VIS_DIR/supreme-marquee-tool.sh" ]; then sudo rm -f -r $STMENU_VIS_DIR/supreme-marquee-tool.sh; fi

		cd $HOME
		git clone https://github.com/SupremePi/PieMarquee2.git
		cd PieMarquee2
		chmod 755 ./install.sh
		./install.sh

		if [ ! -d "$INSTALL_DIR/scripts" ]; then mkdir $INSTALL_DIR/scripts; fi

		mv -f $MENU_DIR/supreme-marquee-toolsh $INSTALL_DIR/scripts/supreme-marquee-tool.sh
		$INSTALL_DIR/scripts/supreme-marquee-tool.sh

	fi

else

	#Added step because marquee script reboots on clean install - Checks if the marquee script has been installed.
	if [ -f "/home/pi/PieMarquee2/scripts/supreme-marquee-tool.sh" ]; then sudo cp /home/pi/PieMarquee2/scripts/supreme-marquee-tool.sh $INSTALL_DIR/scripts/; fi

	if [ -f "$INSTALL_DIR/scripts/supreme-marquee-tool.sh" ]; then 

			#Adds Updated Version to tamoplus Folder
			if [ -f "$MENU_DIR/supreme-marquee-tool.sh" ]; then sudo cp $MENU_DIR/supreme-marquee-tool.sh $INSTALL_DIR/scripts/; fi
			if [ -f "$STMENU_VIS_DIR/supreme-marquee-tool.sh" ]; then sudo cp $STMENU_VIS_DIR/supreme-marquee-tool.sh $INSTALL_DIR/scripts/; fi

			chmod +x $INSTALL_DIR/scripts/supreme-marquee-tool.sh
			$INSTALL_DIR/scripts/supreme-marquee-tool.sh

		else

			if [ -f "$MENU_DIR/supreme-marquee-tool.sh" ]; then sudo rm -f -r $MENU_DIR/supreme-marquee-tool.sh; fi
			if [ -f "$STMENU_VIS_DIR/supreme-marquee-tool.sh" ]; then sudo rm -f -r $STMENU_VIS_DIR/supreme-marquee-tool.sh; fi

			cd /home/pi
			git clone https://github.com/SupremePi/PieMarquee2.git
			cd PieMarquee2
			chmod 755 ./install.sh
			./install.sh

			if [ ! -d "$INSTALL_DIR/scripts" ]; then mkdir $INSTALL_DIR/scripts; fi

			sudo cp $MENU_DIR/supreme-marquee-tool.sh $INSTALL_DIR/scripts/supreme-marquee-tool.sh
			if [ -d "$STMENU_VIS_DIR" ]; then sudo mv -f $MENU_DIR/supreme-marquee-tool.sh $STMENU_VIS_DIR/; fi
			$INSTALL_DIR/scripts/supreme-marquee-tool.sh

	fi
fi
}

remove_screens() {
echo -e "$(tput setaf 2)Removing LaunchingScreens Please Wait. $(tput sgr0)"
sleep 3

if [[ ! -d "/home/pi/RetroPie/LaunchingScreens" ]]; then
mkdir -p "/home/pi/RetroPie/LaunchingScreens"
fi

if [[ -f "/opt/retropie/configs/*/launching.png" ]]; then
rm /opt/retropie/configs/*/launching.png
fi

echo -e "$(tput setaf 2)Done. $(tput sgr0)"
sleep 3
}

###
# New section for downloading new launching screens from Github
###

install_launching_screens() {
    local theme="$1"
    local repo="$2"
    if [[ -z "$repo" ]]; then
        repo="default"
    fi
    if [[ -z "$theme" ]]; then
        theme="default"
        repo="default"
    fi
    rm -rf "/home/pi/RetroPie/LaunchingScreens/$theme"
    mkdir -p "/home/pi/RetroPie/LaunchingScreens"
    git clone "https://github.com/$repo/launchingscreens-$theme.git" "/home/pi/RetroPie/LaunchingScreens/$theme"
    echo -e "$(tput setaf 2)Done. $(tput sgr0)"
    sleep 3
}

uninstall_launching_screens() {
    local theme="$1"
    if [[ -d "/home/pi/RetroPie/LaunchingScreens/$theme" ]]; then
        rm -rf "/home/pi/RetroPie/LaunchingScreens/$theme"
    fi
}

hursty_themes() {
#Adds Updated Version to tamoplus Folder

#One removes menu
if grep 'user_menu_flag=1' "$USER_SETTINGS"; then
	
if [ -f "$INSTALL_DIR/scripts/hurstythemes.sh" ]; then 
	
if [ -f "$MENU_DIR/hurstythemes" ]; then sudo mv -f $MENU_DIR/hurstythemes $INSTALL_DIR/scripts/; fi
if [ -f "$STMENU_VIS_DIR/hurstythemes" ]; then sudo mv -f $STMENU_VIS_DIR/hurstythemes $INSTALL_DIR/scripts/; fi

chmod +x $INSTALL_DIR/scripts/hurstythemes.sh
$INSTALL_DIR/scripts/hurstythemes.sh

else

if [ -f "$MENU_DIR/hurstythemes" ]; then sudo rm -f -r $MENU_DIR/hurstythemes; fi
if [ -f "$STMENU_VIS_DIR/hurstythemes" ]; then sudo rm -f -r $STMENU_VIS_DIR/hurstythemes; fi

wget https://raw.githubusercontent.com/RetroHursty69/HurstyThemes/master/install.sh "$INSTALL_DIR/tmp/install.sh"
chmod +x "$INSTALL_DIR/tmp/install.sh"
./$INSTALL_DIR/tmp/install.sh

if [ ! -d "$INSTALL_DIR/scripts" ]; then mkdir $INSTALL_DIR/scripts; fi

mv -f $MENU_DIR/hurstythemes.sh $INSTALL_DIR/scripts/hurstythemes.sh
$INSTALL_DIR/scripts/hurstythemes.sh

rm -fr "$INSTALL_DIR/tmp"
fi

else

if [ -f "$INSTALL_DIR/scripts/hurstythemes.sh" ]; then 

if [ -f "$MENU_DIR/hurstythemes" ]; then sudo cp $MENU_DIR/hurstythemes $INSTALL_DIR/scripts/; fi
if [ -f "$STMENU_VIS_DIR/hurstythemes" ]; then sudo cp $STMENU_VIS_DIR/hurstythemes $INSTALL_DIR/scripts/; fi

chmod +x $INSTALL_DIR/scripts/hurstythemes.sh
$INSTALL_DIR/scripts/hurstythemes.sh

else

if [ -f "$MENU_DIR/hurstythemes" ]; then sudo cp $MENU_DIR/hurstythemes $INSTALL_DIR/scripts/; fi
if [ -f "$STMENU_VIS_DIR/hurstythemes" ]; then sudo cp $STMENU_VIS_DIR/hurstythemes $INSTALL_DIR/scripts/; fi

wget https://raw.githubusercontent.com/RetroHursty69/HurstyThemes/master/install.sh "$INSTALL_DIR/tmp/install.sh"
chmod +x "$INSTALL_DIR/tmp/install.sh"
./$INSTALL_DIR/tmp/install.sh

if [ ! -d "$INSTALL_DIR/scripts" ]; then mkdir $INSTALL_DIR/scripts; fi

cp $MENU_DIR/hurstythemes.sh $INSTALL_DIR/scripts/hurstythemes.sh
$INSTALL_DIR/scripts/hurstythemes.sh

rm -fr "$INSTALL_DIR/tmp"
fi

fi
}

no_audio_fix() {
sudo grep hdmi_force_edid_audio /boot/config.txt > /dev/null 2>&1
if [ $? -eq 0 ] ; then
echo "The Audio changes have already been made. If you are still not getting audio then there must be another issue."
sleep 4
echo "For now I will reverse the changes since they did not help you."
sleep 5
sudo perl -p -i -e 's/hdmi_force_edid_audio=1/#dtoverlay=lirc-rpi/g' /boot/config.txt
sudo perl -p -i -e 's/hdmi_force_hotplug=1/#hdmi_force_hotplug=1/g' /boot/config.txt
sudo perl -p -i -e 's/hdmi_drive=2/#hdmi_drive=2/g' /boot/config.txt
else
echo "I have scanned the config file and see that the audio fix is NOT in place."
sleep 4
echo "If this fix does not work please run the script again to roll the changes back."
sleep 10
echo "I will make the necessary config changes and reboot your Pi"
sleep 5
sudo perl -p -i -e 's/#dtoverlay=lirc-rpi/hdmi_force_edid_audio=1/g' /boot/config.txt
sudo perl -p -i -e 's/#hdmi_force_hotplug=1/hdmi_force_hotplug=1/g' /boot/config.txt
sudo perl -p -i -e 's/#hdmi_drive=2/hdmi_drive=2/g' /boot/config.txt
sudo reboot
fi
}

no_audio_force_720p() {
sudo grep hdmi_mode=16 /boot/config.txt > /dev/null 2>&1
if [ $? -eq 0 ] ; then
echo "It looks like you have tried the Force 1080p script. Please run it again to roll the changes back before running this script."
sleep 10
exit
fi
sudo grep hdmi_mode=4 /boot/config.txt > /dev/null 2>&1
if [ $? -eq 0 ] ; then
echo "The Audio changes have already been made. If you are still not getting audio then there must be another issue."
sleep 4
echo "For now I will reverse the changes since they did not help you."
sleep 5
sudo perl -p -i -e 's/hdmi_group=1/#hdmi_group=1/g' /boot/config.txt
sudo perl -p -i -e 's/hdmi_mode=4/#hdmi_mode=1/g' /boot/config.txt
else
echo "I have scanned the config file and see that Force 720p is not cofigured."
sleep 4
echo "I will make the necessary config changes and reboot your Pi. If this does not fix your issue please run this script again to reverse the changes."
sleep 5
sudo perl -p -i -e 's/#hdmi_group=1/hdmi_group=1/g' /boot/config.txt
sudo perl -p -i -e 's/#hdmi_mode=1/hdmi_mode=4/g' /boot/config.txt
sudo reboot
fi
}

no_audio_force_1080p() {
sudo grep hdmi_mode=4 /boot/config.txt > /dev/null 2>&1
if [ $? -eq 0 ] ; then
echo "It looks like you have tried the Force 720p script. Please run it again to roll the changes back before running this script."
sleep 10
exit
fi
sudo grep hdmi_mode=16 /boot/config.txt > /dev/null 2>&1
if [ $? -eq 0 ] ; then
echo "Looks like we have already tried to force 1080p output. If you are still not getting audio then there must be another issue."
sleep 4
echo "For now I will reverse the changes since they did not help you. They will take effect after the next reboot"
sleep 5
sudo perl -p -i -e 's/hdmi_group=1/#hdmi_group=1/g' /boot/config.txt
sudo perl -p -i -e 's/hdmi_mode=16/#hdmi_mode=1/g' /boot/config.txt
else
echo "I have scanned the config file and see that 1080p is not being forced."
sleep 4
echo "I will make the necessary config changes and reboot your Pi"
sleep 5
sudo perl -p -i -e 's/#hdmi_group=1/hdmi_group=1/g' /boot/config.txt
sudo perl -p -i -e 's/#hdmi_mode=1/hdmi_mode=16/g' /boot/config.txt
sudo reboot
fi
}

enable_carbonite() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/tamoplus"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"carbonite\""
NOR_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWN_LOD='"/home/pi/RetroPie/videoloadingscreens/jarvis"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWD_EXS="/home/pi/RetroPie/splashscreens/exitscreens/JarvisExit.mp4"
if [ $CUR_THM == $NEW_THM ]; then echo "Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [ $CUR_PLY == $NEW_PLY ]; then echo "Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $NOR_LOD == $NEWN_LOD ]]; then echo "Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${NOR_LOD}|videoloadingscreens=${NEWN_LOD}|g" $RUNONSTART; fi
if [ -f /home/pi/RetroPie/splashscreens/JarvisSplash.mp4 ]; then sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/JarvisSplash.mp4/" $SPLSCREEN
else sudo sed -i -E "s/.*/\/opt\/retropie\/supplementary\/splashscreen\/retropie-default.png/" $SPLSCREEN; fi
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWD_EXS ]] && [[ $CUR_REXS == $NEWD_EXS ]]; then echo "Christmas Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWD_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWD_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_devils() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/RetroPie/roms/music/devils"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"devilchromey\""
HAL_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWH_LOD='"/home/pi/RetroPie/videoloadingscreens/retrodevils"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWH_EXS='"/home/pi/RetroPie/splashscreens/exitscreens/RetroDevilReaperExit.mp4"'
if [[ $CUR_THM == $NEW_THM ]]; then echo "Retro-Devils Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [[ $CUR_PLY == $NEW_PLY ]]; then echo "Retro-Devils Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $HAL_LOD == $NEWH_LOD ]]; then echo "Retro-Devils Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${HAL_LOD}|videoloadingscreens=${NEWH_LOD}|g" $RUNONSTART; fi
sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/RetroDevilReaper.mp4/" $SPLSCREEN
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWH_EXS ]] && [[ $CUR_REXS == $NEWH_EXS ]]; then echo "Halloween Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWH_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWH_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_halloween() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/RetroPie/roms/music/halloween"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"halloweenspecial\""
HAL_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWH_LOD='"/home/pi/RetroPie/videoloadingscreens/halloween"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWH_EXS='"/home/pi/RetroPie/splashscreens/exitscreens/HalloweenExit.mp4"'
if [[ $CUR_THM == $NEW_THM ]]; then echo "Halloween Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [[ $CUR_PLY == $NEW_PLY ]]; then echo "Halloween Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $HAL_LOD == $NEWH_LOD ]]; then echo "Halloween Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${HAL_LOD}|videoloadingscreens=${NEWH_LOD}|g" $RUNONSTART; fi
sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/Halloween.mp4/" $SPLSCREEN
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWH_EXS ]] && [[ $CUR_REXS == $NEWH_EXS ]]; then echo "Halloween Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWH_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWH_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_pistolero() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/RetroPie/roms/music/pistolero"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"pistolero\""
HAL_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWH_LOD='"/home/pi/RetroPie/videoloadingscreens/pistolero"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWH_EXS='"/home/pi/RetroPie/splashscreens/exitscreens/PistoleroExit.mp4"'
if [[ $CUR_THM == $NEW_THM ]]; then echo "Pistolero Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [[ $CUR_PLY == $NEW_PLY ]]; then echo "Pistolero Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $HAL_LOD == $NEWH_LOD ]]; then echo "Pistolero Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${HAL_LOD}|videoloadingscreens=${NEWH_LOD}|g" $RUNONSTART; fi
sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/Pistolero.mp4/" $SPLSCREEN
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWH_EXS ]] && [[ $CUR_REXS == $NEWH_EXS ]]; then echo "Pistolero Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWH_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWH_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_pleasure() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/RetroPie/roms/music/pleasureparadise"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"pleasureparadise\""
HAL_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWH_LOD='"/home/pi/RetroPie/videoloadingscreens/pleasureparadise"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWH_EXS='"/home/pi/RetroPie/splashscreens/exitscreens/PleasureParadiseExit.mp4"'
if [[ $CUR_THM == $NEW_THM ]]; then echo "Pleasure Paradise Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [[ $CUR_PLY == $NEW_PLY ]]; then echo "Pleasure Paradise Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $HAL_LOD == $NEWH_LOD ]]; then echo "Pleasure Paradise Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${HAL_LOD}|videoloadingscreens=${NEWH_LOD}|g" $RUNONSTART; fi
sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/PleasureParadise.mp4/" $SPLSCREEN
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWH_EXS ]] && [[ $CUR_REXS == $NEWH_EXS ]]; then echo "Pleasure Paradise Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWH_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWH_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_stranger() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/RetroPie/roms/music/strangerthings"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"strangerstuff\""
STR_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWS_LOD='"/home/pi/RetroPie/videoloadingscreens/strangerpi"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWS_EXS='"/home/pi/RetroPie/splashscreens/exitscreens/StrangerExit.mp4"'
if [[ $CUR_THM == $NEW_THM ]]; then echo "Stranger Pi Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [[ $CUR_PLY == $NEW_PLY ]]; then echo "Stranger Pi Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $STR_LOD == $NEWS_LOD ]]; then echo "Stranger Pi Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${STR_LOD}|videoloadingscreens=${NEWS_LOD}|g" $RUNONSTART; fi
sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/StrangerPi.mp4/" $SPLSCREEN
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWS_EXS ]] && [[ $CUR_REXS == $NEWS_EXS ]]; then echo "Stranger Things Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWS_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWS_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_supreme() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/RetroPie/roms/music/st"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"Supreme_Space\""
STR_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWS_LOD='"/home/pi/RetroPie/videoloadingscreens/supreme"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWS_EXS='"/home/pi/RetroPie/splashscreens/exitscreens/SupremeExit.mp4"'
if [[ $CUR_THM == $NEW_THM ]]; then echo "Supreme Ultra Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [[ $CUR_PLY == $NEW_PLY ]]; then echo "Supreme Ultra Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $STR_LOD == $NEWS_LOD ]]; then echo "Supreme Ultra Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${STR_LOD}|videoloadingscreens=${NEWS_LOD}|g" $RUNONSTART; fi
sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/Supreme.mp4/" $SPLSCREEN
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWS_EXS ]] && [[ $CUR_REXS == $NEWS_EXS ]]; then echo "Supreme Ultra Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWS_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWS_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_xmas() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
NEW_PLY='"/home/pi/RetroPie/roms/music/xmas"'
CUR_THM=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
NEW_THM="value=\"merryxmas\""
XMA_LOD=$(grep "videoloadingscreens=" "$RUNONSTART"|grep -o '".*"')
NEWX_LOD='"/home/pi/RetroPie/videoloadingscreens/xmas"'
CUR_SEXS=$(grep "omxplayer" "$EXITSPLS"|awk '{print $7}')
CUR_REXS=$(grep "omxplayer" "$EXITSPLR"|awk '{print $7}')
NEWX_EXS='"/home/pi/RetroPie/splashscreens/exitscreens/XmasExit.mp4"'
if [[ $CUR_THM == $NEW_THM ]]; then echo "Christmas Theme already set!"; else sed -i -E "s|${CUR_THM}|${NEW_THM}|g" $ES_SETTINGS; fi
if [[ $CUR_PLY == $NEW_PLY ]]; then echo "Christmas Music already set!"; else sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC; fi 
if [[ $XMA_LOD == $NEWX_LOD ]]; then echo "Christmas Videoloadingscreens already set!"; else sed -i -E "s|videoloadingscreens=${XMA_LOD}|videoloadingscreens=${NEWX_LOD}|g" $RUNONSTART; fi
sudo sed -i -E "s/.*/\/home\/pi\/RetroPie\/splashscreens\/CharlieBrown.mp4/" $SPLSCREEN
echo "Restarting EmulationStaion..."
pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
sleep 1
killall emulationstation
sleep 1
if [[ $CUR_SEXS == $NEWX_EXS ]] && [[ $CUR_REXS == $NEWX_EXS ]]; then echo "Christmas Exit Splash already set!"
else sed -i -E "s|${CUR_SEXS}|${NEWX_EXS}|g" $EXITSPLS; sed -i -E "s|${CUR_REXS}|${NEWX_EXS}|g" $EXITSPLR; fi
sudo openvt -c 1 -s -f emulationstation 2>&1
exit
}

enable_music() {
if [ -f "$SETTINGS_DIR"/DisableMusic ]; then
	sudo rm -f "$SETTINGS_DIR"/DisableMusic
	(nohup python $SCRIPT_LOC > /dev/null 2>&1) &
else
	touch "$SETTINGS_DIR"/DisableMusic
	pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
	pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
fi
sleep 1
stats_check
}

enable_musicos() {
if grep -q "#(nohup python $SCRIPT_LOC > /dev/null 2>&1) &" "$AUTOSTART"; then
	sudo sed -i 's/\#(nohup python/(nohup python/g' $AUTOSTART
elif grep -q "(nohup python $SCRIPT_LOC > /dev/null 2>&1) &" "$AUTOSTART"; then
	sudo sed -i 's/(nohup python/\#(nohup python/g' $AUTOSTART
fi
stats_check
}

enable_arcade() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
export CUR_PLY
NEW_PLY='"/home/pi/RetroPie/roms/music/arcade"'
export NEW_PLY
sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC
bgm_check
stats_check
}

enable_custom() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
export CUR_PLY
NEW_PLY='"/home/pi/RetroPie/roms/music/custom"'
export NEW_PLY
sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC
bgm_check
stats_check
}

enable_nt() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
export CUR_PLY
NEW_PLY='"/home/pi/RetroPie/roms/music/nt"'
export NEW_PLY
sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC
bgm_check
stats_check
}

enable_uvf() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
export CUR_PLY
NEW_PLY='"/home/pi/RetroPie/roms/music/uvf"'
export NEW_PLY
sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC
bgm_check
stats_check
}

enable_venom() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
export CUR_PLY
NEW_PLY='"/home/pi/RetroPie/roms/music/venom"'
export NEW_PLY
sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${NEW_PLY}|g" $SCRIPT_LOC
bgm_check
stats_check
}

disable_music_dir() {
CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
export CUR_PLY
DEF_DIR='"/home/pi/.tamoplus"'
export DEF_DIR
sed -i -E "s|musicdir = ${CUR_PLY}|musicdir = ${DEF_DIR}|g" $SCRIPT_LOC
bgm_check
stats_check
}

exit_splash() {
if [ -d "$HOME/RetroPie/splashscreens/exitscreensOff" ]; then
	sudo mv -f $HOME/RetroPie/splashscreens/exitscreensOff $HOME/RetroPie/splashscreens/exitscreens
else
	sudo mv -f $HOME/RetroPie/splashscreens/exitscreens $HOME/RetroPie/splashscreens/exitscreensOff
fi
stats_check
}

video_screens() {
if grep -q 'enablevideolaunch="true"' "$RUNONSTART"; then sed -i -E 's|enablevideolaunch="true"|enablevideolaunch="false"|g' $RUNONSTART
else sed -i -E 's|enablevideolaunch="false"|enablevideolaunch="true"|g' $RUNONSTART; fi
stats_check
}

overlay_enable() {
if grep -q 'overlay_enable = True' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_enable = True/overlay_enable = False/g' $SCRIPT_LOC
elif grep -q 'overlay_enable = False' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_enable = False/overlay_enable = True/g' $SCRIPT_LOC
fi
bgm_check
stats_check
}

overlay_fade_out() {
if grep -q 'overlay_fade_out = True' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_fade_out = True/overlay_fade_out = False/g' $SCRIPT_LOC
elif grep -q 'overlay_fade_out = False' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_fade_out = False/overlay_fade_out = True/g' $SCRIPT_LOC
fi
bgm_check
stats_check
}

overlay_rounded_corners() {
if grep -q 'overlay_rounded_corners = True' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_rounded_corners = True/overlay_rounded_corners = False/g' $SCRIPT_LOC
elif grep -q 'overlay_rounded_corners = False' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_rounded_corners = False/overlay_rounded_corners = True/g' $SCRIPT_LOC
fi
bgm_check
stats_check
}

overlay_replace_newline() {
if grep -q 'overlay_replace_newline = True' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_replace_newline = True/overlay_replace_newline = False/g' $SCRIPT_LOC
elif grep -q 'overlay_replace_newline = False' "$SCRIPT_LOC"; then
	sed -i -E 's/overlay_replace_newline = False/overlay_replace_newline = True/g' $SCRIPT_LOC
fi
bgm_check
stats_check
}

overlay_v_pos() {
CUR_VPOS=$(grep "overlay_y_offset =" "$SCRIPT_LOC"|awk '{print $3}')
export CUR_VPOS
NEW_VPOST='"0"'
export NEW_VPOST
NEW_VPOSB=\"$((height-overlay_h_size))\"
export NEW_VPOSB
if [ $CUR_VPOS = \"0\" ]; then
	sed -i -E "s/overlay_y_offset = ${CUR_VPOS}/overlay_y_offset = ${NEW_VPOSB}/g" $SCRIPT_LOC
else
	sed -i -E "s/overlay_y_offset = ${CUR_VPOS}/overlay_y_offset = ${NEW_VPOST}/g" $SCRIPT_LOC
fi
bgm_check
stats_check
}

overlay_h_pos() {
CUR_HPOS=$(grep "overlay_x_offset =" "${SCRIPT_LOC}"|awk '{print $3}')
export CUR_HPOS
NEW_HPOSL='"0"'
export NEW_HPOSL
NEW_HPOSR=\"$((width-overlay_w_size))\"
export NEW_HPOSR
if [ $CUR_HPOS = \"0\" ]; then
	sed -i -E "s/overlay_x_offset = ${CUR_HPOS}/overlay_x_offset = ${NEW_HPOSR}/g" $SCRIPT_LOC
else
	sed -i -E "s/overlay_x_offset = ${CUR_HPOS}/overlay_x_offset = ${NEW_HPOSL}/g" $SCRIPT_LOC
fi
bgm_check
stats_check
}

rm_menus() {
if [ -f /etc/sbu/sbu.sh ]; then
	echo "Please Note: Because You Picked Remove Menus And Your On A Supreme Build This Installer Will Remove The Audio Tools, Visual tools and controller tools menus that will be added By TAMO+"
	echo "You can put them back with Fix My Build in the RetroPie Menu If On A Supreme Build"
	sleep 3
else
	echo "Please Note This Installer Will Remove The Audio Settings, ES Themes, and Splash Screens menus that will be added By Tamo Plus"
	sleep 3
fi

# Normal RetroPie Menu Edits
if [ -f "$MENU_DIR/audiosettings.rp" ]; then sudo rm -f $MENU_DIR/audiosettings.rp; fi
if [ -f "$MENU_DIR/esthemes.rp" ]; then sudo rm -f $MENU_DIR/esthemes.rp; fi
if [ -f "$MENU_DIR/splashscreen.rp" ]; then sudo rm -f $MENU_DIR/splashscreen.rp; fi

# Supreme ES Edits
if [ -d "/home/pi/RetroPie/scripts/.sb-unified" ]; then

	# Supreme RetroPie Menu Edits
	if [ -d $MENU_DIR/audiotools ]; then sudo rm -fR $MENU_DIR/audiotools; fi
	if [ -d $MENU_DIR/controllertools ]; then sudo rm -fR $MENU_DIR/controllertools; fi
	if [ -d $MENU_DIR/visualtools ]; then sudo rm -fR $MENU_DIR/visualtools; fi

	# Supreme Attract mode Edits
	if [ ! -d "/opt/retropie/configs/all/attractmode" ]; then mkdir /opt/retropie/configs/all/attractmode; ln -s /home/pi/.attract/* /opt/retropie/configs/all/attractmode/; fi
	if [ -f /opt/retropie/configs/all/attractmode/romlists/Audio\ tools.txt ]; then sudo mv /opt/retropie/configs/all/attractmode/romlists/Audio\ tools.txt /opt/retropie/configs/all/attractmode/romlists/Audio\ tools.txt.bk; fi
	if [ -f /opt/retropie/configs/all/attractmode/romlists/Visual\ tools.txt  ]; then sudo mv /opt/retropie/configs/all/attractmode/romlists/Visual\ tools.txt /opt/retropie/configs/all/attractmode/romlists/Visual\ tools.txt.bk; fi
	if [ -f /opt/retropie/configs/all/attractmode/emulators/Visual\ tools.cfg ]; then sudo mv /opt/retropie/configs/all/attractmode/emulators/Visual\ tools.cfg /opt/retropie/configs/all/attractmode/emulators/Visual\ tools.cfg.bk; fi
	if [ -f /opt/retropie/configs/all/attractmode/emulators/Audio\ tools.cfg ]; then sudo mv /opt/retropie/configs/all/attractmode/emulators/Audio\ tools.cfg /opt/retropie/configs/all/attractmode/emulators/Audio\ tools.cfg.bk; fi
   
	cat <<\EOF152935 > "/opt/retropie/configs/all/attractmode/romlists/Settings.txt"
#Name;Title;Emulator;CloneOf;Year;Manufacturer;Category;Players;Rotation;Control;Status;DisplayCount;DisplayType;AltRomname;AltTitle;Extra;Buttons
Emulation tools;/ Emulation Tools;@;;;;;;;;;0;;;;;
Retropie tools;/ Retropie Tools;@;;;;;;;;;0;;;;;
tamoplus;Tamo Plus;Settings;;;;;;;;;;;;;;
displayutility;Display Utility;Settings;;;;;;;;;;;;;;
basicinfo;Retropie Basic Infos;Settings;;;;;;;;;;;;;;
favorites;Favorites Utility;Settings;;;;;;;;;;;;;;
fixmybuild;Fix My Build;Settings;;;;;;;;;;;;;;
frontendselector;Front End Selector;Settings;;;;;;;;;;;;;;
attract-systems-detection;Attract Systems Detection;Settings;;;;;;;;;;;;;;
#systemsnapswitch;Systems snaps switch;Settings;;;;;;;;;;;;;;
raspiconfig;Raspi Config;Settings;;;;;;;;;;;;;;
rpsetup;Retropie Setup;Settings;;;;;;;;;;;;;;
reboot;Reboot;Settings;;;;;;;;;;;;;;
shutdown;Shutdown;Settings;;;;;;;;;;;;;;
EOF152935
	sudo chmod +x /opt/retropie/configs/all/attractmode/romlists/Settings.txt
fi

cd $HOME
}

keep_menus() {
	if [ -f /etc/sbu/sbu.sh ]; then
	echo "Please Note: Because You Picked Keep Menus And Your On A Supreme Build This Installer Will Keep The Audio Tools, Visual tools and controller tools menus."
	echo "You can put them back with Fix My Build in the RetroPie Menu If On A Supreme Build"
	sleep 3
else
	echo "Please Note: Because You Picked Keep Menus, This Installer Will Keep The Audio Settings, ES Themes, and Splash Screens Scripts. This Script will also add new menu folders"
	sleep 3
fi

# Supreme ES Edits
if [ -d "/home/pi/RetroPie/scripts/.sb-unified" ]; then

	#Visual Tools
	if [[ ! -d "$MENU_DIR/visualtools" ]]; then
	mkdir -p "$MENU_DIR/visualtools"
	fi

	cp $INSTALL_DIR/scripts/bezelproject.sh $MENU_DIR/visualtools/bezelproject.sh
	cp $INSTALL_DIR/scripts/bezels.sh $MENU_DIR/visualtools/bezels.sh
	cp $INSTALL_DIR/scripts/genesis.sh $MENU_DIR/visualtools/genesis.sh
	cp $INSTALL_DIR/scripts/hurstythemes.sh $MENU_DIR/visualtools/hurstythemes.sh
	cp $INSTALL_DIR/scripts/loadingmedia-tool.sh $MENU_DIR/visualtools/loadingmedia-tool.sh
	cp $INSTALL_DIR/scripts/removemedia.sh $MENU_DIR/visualtools/removemedia.sh
	cp $INSTALL_DIR/scripts/resolution-tool.sh  $MENU_DIR/visualtools/resolution-tool.sh 
	cp $INSTALL_DIR/scripts/retropie-tweak.sh $MENU_DIR/visualtools/retropie-tweak.sh
	cp $INSTALL_DIR/scripts/skyscraper.sh $MENU_DIR/visualtools/skyscraper.sh
	cp $INSTALL_DIR/scripts/supreme-marquee-tool.sh $MENU_DIR/visualtools/supreme-marquee-tool.sh
	mv $MENU_DIR/splashscreen.rp $MENU_DIR/visualtools/splashscreen.rp
	mv $MENU_DIR/esthemes.rp $MENU_DIR/visualtools/esthemes.rp
	chmod 755 $MENU_DIR/visualtools/*
	#--------------------------------------------------------------------------------------------------------#

	#Audio Tools
	if [[ ! -d "$MENU_DIR/audiotools" ]]; then
	mkdir -p "$MENU_DIR/audiotools"
	fi 

	cp $INSTALL_DIR/scripts/NoAudioFix-TrythisFirst.sh  $MENU_DIR/audiotools/NoAudioFix-TrythisFirst.sh 
	mv $MENU_DIR/audiosettings.rp $MENU_DIR/audiotools/audiosettings.rp
	chmod 755 $MENU_DIR/audiotools/*
	#--------------------------------------------------------------------------------------------------------#

	#Controller Tools
	if [[ ! -d "$MENU_DIR/controllertools" ]]; then
	mkdir -p "$MENU_DIR/controllertools"
	fi

	cp $INSTALL_DIR/scripts/joystick_selection.sh $MENU_DIR/controllertools/joystick_selection.sh
	cp $INSTALL_DIR/scripts/LightGunAimtrak.sh $MENU_DIR/controllertools/LightGunAimtrak.sh
	cp $INSTALL_DIR/scripts/LightGunConf.sh $MENU_DIR/controllertools/LightGunConf.sh
	cp $INSTALL_DIR/scripts/resetcontrollers.sh $MENU_DIR/controllertools/resetcontrollers.sh
	cp $INSTALL_DIR/scripts/sinden-menu.sh $MENU_DIR/controllertools/sinden-menu.sh
	cp $INSTALL_DIR/scripts/xinmo-juyao.sh $MENU_DIR/controllertools/xinmo-juyao.sh
	chmod 755 $MENU_DIR/controllertools/*
	#--------------------------------------------------------------------------------------------------------#

	# Supreme Attract mode Edits
	if [ ! -d "/opt/retropie/configs/all/attractmode" ]; then mkdir /opt/retropie/configs/all/attractmode; ln -s /home/pi/.attract/* /opt/retropie/configs/all/attractmode/; fi
	if [ -f /opt/retropie/configs/all/attractmode/romlists/Audio\ tools.txt ]; then sudo mv /opt/retropie/configs/all/attractmode/romlists/Audio\ tools.txt.bk /opt/retropie/configs/all/attractmode/romlists/Audio\ tools.txt; fi
	if [ -f /opt/retropie/configs/all/attractmode/romlists/Visual\ tools.txt  ]; then sudo mv /opt/retropie/configs/all/attractmode/romlists/Visual\ tools.txt.bk /opt/retropie/configs/all/attractmode/romlists/Visual\ tools.txt; fi
	if [ -f /opt/retropie/configs/all/attractmode/emulators/Visual\ tools.cfg ]; then sudo mv /opt/retropie/configs/all/attractmode/emulators/Visual\ tools.cfg.bk /opt/retropie/configs/all/attractmode/emulators/Visual\ tools.cfg; fi
	if [ -f /opt/retropie/configs/all/attractmode/emulators/Audio\ tools.cfg ]; then sudo mv /opt/retropie/configs/all/attractmode/emulators/Audio\ tools.cfg.bk /opt/retropie/configs/all/attractmode/emulators/Audio\ tools.cfg; fi
   
	cat <<\EOF152935 > "/opt/retropie/configs/all/attractmode/romlists/Settings.txt"
#Name;Title;Emulator;CloneOf;Year;Manufacturer;Category;Players;Rotation;Control;Status;DisplayCount;DisplayType;AltRomname;AltTitle;Extra;Buttons
Audio tools;/ Audio Tools;@;;;;;;;;;0;;;;;
Controller tools;/ Controller Tools;@;;;;;;;;;0;;;;;
Emulation tools;/ Emulation Tools;@;;;;;;;;;0;;;;;
Retropie tools;/ Retropie Tools;@;;;;;;;;;0;;;;;
Visual tools;/ Visual Tools;@;;;;;;;;;0;;;;;
displayutility;Display Utility;Settings;;;;;;;;;;;;;;
basicinfo;Retropie Basic Infos;Settings;;;;;;;;;;;;;;
favorites;Favorites Utility;Settings;;;;;;;;;;;;;;
fixmybuild;Fix My Build;Settings;;;;;;;;;;;;;;
frontendselector;Front End Selector;Settings;;;;;;;;;;;;;;
attract-systems-detection;Attract Systems Detection;Settings;;;;;;;;;;;;;;
#systemsnapswitch;Systems snaps switch;Settings;;;;;;;;;;;;;;
raspiconfig;Raspi Config;Settings;;;;;;;;;;;;;;
rpsetup;Retropie Setup;Settings;;;;;;;;;;;;;;
reboot;Reboot;Settings;;;;;;;;;;;;;;
shutdown;Shutdown;Settings;;;;;;;;;;;;;;
EOF152935
	sudo chmod +x /opt/retropie/configs/all/attractmode/romlists/Settings.txt
else
	# Normal RetroPie Menu Edits
	touch $MENU_DIR/audiosettings.rp
	touch $MENU_DIR/esthemes.rp
	touch $MENU_DIR/splashscreen.rp
	sudo chown $USER:$USER $MENU_DIR/*
fi

cd $HOME
}

stats_check() {
enable="\Z2Enabled\Zn"
disable="\Z1Disabled\Zn"
if [ -f "$SETTINGS_DIR"/DisableMusic ]; then
	bgms=$disable
else
	bgms=$enable
fi
if grep -q "#(nohup python $SCRIPT_LOC > /dev/null 2>&1) &" "$AUTOSTART"; then
	bgmos=$disable
elif grep -q "(nohup python $SCRIPT_LOC > /dev/null 2>&1) &" "$AUTOSTART"; then
	bgmos=$enable
fi
if grep -q "overlay_enable = True" "$SCRIPT_LOC"; then
	ovs=$enable
else
	ovs=$disable
fi
if grep -q "overlay_fade_out = True" "$SCRIPT_LOC"; then
	ovf=$enable
else
	ovf=$disable
fi
overlay_fadeout_time=$(grep "overlay_fade_out_time = " "$SCRIPT_LOC"|awk '{print $3}')
oft="\Z3$overlay_fadeout_time\Zn"
msd=$(grep "startdelay = " "$SCRIPT_LOC"|awk '{print $3}')
msd="\Z3$msd\Zn"
if grep -q "overlay_rounded_corners = True" "$SCRIPT_LOC"; then
	ocr=$enable
else
	ocr=$disable
fi
if grep -q "overlay_replace_newline = True" "$SCRIPT_LOC"; then
	ons=$enable
else
	ons=$disable
fi
CUR_HPOS=$(grep "overlay_x_offset =" "$SCRIPT_LOC"|awk '{print $3}' | tr -d '"')
if [ $CUR_HPOS = "0" ]; then
	hpos="\Z3Left\Zn"
else
	hpos="\Z3Right\Zn"
fi
CUR_VPOS=$(grep "overlay_y_offset =" "$SCRIPT_LOC"|awk '{print $3}' | tr -d '"')
export CUR_VPOS
if [ $CUR_VPOS = "0" ]; then
	vpos="\Z3Top\Zn"
else
	vpos="\Z3Bottom\Zn"
fi
if grep -q 'musicdir = "/home/pi/.tamoplus"' "$SCRIPT_LOC"; then ms=$disable
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/halloween"' "$SCRIPT_LOC"; then ms="\Z3Halloween\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/xmas"' "$SCRIPT_LOC"; then ms="\Z3Christmas\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/devils"' "$SCRIPT_LOC"; then ms="\Z3Retro-Devils\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/pistolero"' "$SCRIPT_LOC"; then ms="\Z3Pistolero\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/pleasureparadise"' "$SCRIPT_LOC"; then ms="\Z3Pleasure Paradise\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/strangerthings"' "$SCRIPT_LOC"; then ms="\Z3StrangerThings\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/st"' "$SCRIPT_LOC"; then ms="\Z3Supreme Ultra\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/custom"' "$SCRIPT_LOC"; then ms="\Z3Custom\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/arcade"' "$SCRIPT_LOC"; then ms="\Z3Arcade\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/nt"' "$SCRIPT_LOC"; then ms="\Z3Nostalgia\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/uvf"' "$SCRIPT_LOC"; then ms="\Z3Ultimate Vs Fighter\Zn"
elif grep -q 'musicdir = "/home/pi/RetroPie/roms/music/venom"' "$SCRIPT_LOC"; then ms="\Z3Venom\Zn"
else
	CUR_PLY=$(grep "musicdir =" "$SCRIPT_LOC"|awk '{print $3}')
	export CUR_PLY
	ms="\Z3$(basename $CUR_PLY | tr -d '"')\Zn"
fi
THEME=$(grep "<string name=\"ThemeSet\"" "$ES_SETTINGS"|awk '{print $3}')
if [[ $THEME == value=\"strangerstuff\" ]]; then ts="\Z3Stranger Things\Zn"
elif [[ $THEME == value=\"halloweenspecial\" ]]; then ts="\Z3Halloween\Zn"
elif [[ $THEME == value=\"merryxmas\" ]]; then ts="\Z3Christmas\Zn"
elif [[ $THEME == value=\"devilchromey\" ]]; then ts="\Z3Retro-Devils\Zn"
elif [[ $THEME == value=\"carbonite\" ]]; then ts="\Z3Carbonite\Zn"
elif [[ $THEME == value=\"pleasureparadise\" ]]; then ts="\Z3Pleasure Paradise\Zn"
elif [[ $THEME == value=\"pistolero\" ]]; then ts="\Z3Pistolero\Zn"
elif [[ $THEME == value=\"Supreme_Space\" ]]; then ts="\Z3Supreme Ultra\Zn"
else
	ts="\Z3$(basename $THEME | cut -d '"' -f 2)\Zn"
fi
volume=$(grep "maxvolume =" "$SCRIPT_LOC"|awk '{print $3}' | awk '{print $1 * 100}')
vol="\Z3$volume%\Zn"
if [ -d $HOME/RetroPie/splashscreens/exitscreensOff ]; then exs=$disable; else exs=$enable; fi
if grep -q 'enablevideolaunch="true"' "$RUNONSTART"; then vls=$enable; else vls=$disable; fi
width=$(fbset -fb /dev/fb0 | grep '\".*\"' | grep -m 1 -o '[0-9][0-9][0-9]\+x' | tr -d 'x')
height=$(fbset -fb /dev/fb0 | grep '\".*\"' | grep -m 1 -o 'x[0-9][0-9][0-9]\+' | tr -d 'x')
if [ "${width}" -ge 3800 ] && [ "${height}" -ge 2100 ]; then
	res="2160p"
elif [ "${width}" -ge 1900 ] && [ "${height}" -ge 1000 ] && [ "${width}" -le 2100 ] && [ "${height}" -le 3800 ]; then
	res="1080p"
elif [ "${width}" -ge 1000 ] && [ "${height}" -ge 600 ] && [ "${width}" -le 1900 ] && [ "${height}" -le 1000 ]; then
	res="720p"
elif [ "${height}" -le 599 ]; then
	res="SD"
fi
resolution="\Z3$res\Zn"
if [ "${width}" -ge 1900 ] && [ "${height}" -ge 1000 ]; then
	overlay_w_size=600
	overlay_h_size=32
elif [ "${width}" -ge 1000 ] && [ "${height}" -ge 600 ] && [ "${width}" -le 1900 ] && [ "${height}" -le 1000 ]; then
	overlay_w_size=300
	overlay_h_size=21
elif [ "${height}" -le 599 ]; then
	overlay_w_size=150
	overlay_h_size=15
fi
CURCOLOR=$(grep "overlay_text_color =" "$SCRIPT_LOC"|awk '{print $3}' | tr -d '"')
fcolor="\Z3$CURCOLOR\Zn"
CURFONT=$(grep "overlay_text_font =" "$SCRIPT_LOC"|awk '{print $3}' | tr -d '"')
cfont="\Z3$CURFONT\Zn"
OVLCOLOR=$(grep "overlay_background_color =" "$SCRIPT_LOC"|awk '{print $3}' | tr -d '"')
ocolor="\Z3$OVLCOLOR\Zn"
if grep 'auto_update_flag=0' "$USER_SETTINGS"; then aupstat="\Z1Off\Zn"; else aupstat="\Z2On\Zn"; fi
if grep 'user_menu_flag=0' "$USER_SETTINGS"; then menstat="\Z1Off\Zn"; else menstat="\Z2On\Zn"; fi
}

bgm_check() {
if [ -f "$SETTINGS_DIR"/DisableMusic ]; then
	echo "Background Music Disabled!"
else
	pgrep -f "BGM.py" |xargs sudo kill -9 > /dev/null 2>&1 &
	pgrep -f pngview|xargs sudo kill -9 > /dev/null 2>&1 &
	sleep 1
	(nohup python $SCRIPT_LOC > /dev/null 2>&1) &
fi
sleep 1
}

